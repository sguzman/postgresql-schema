apiVersion: v1
kind: PersistentVolume
metadata:
  name: youtube-pv-volume
  namespace: youtube
  annotations:
    pv.beta.kubernetes.io/gid: "1234"
  labels:
    type: local
    name: youtube
spec:
  storageClassName: manual
  capacity:
    storage: 100Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/home/montezuma/data/postgres/"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: youtube-pv-claim
  labels:
    name: youtube
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
apiVersion: v1
kind: Service
metadata:
  namespace: youtube
  name: postgres-service
  labels:
    name: youtube
spec:
  ports:
    - name: postgresql
      protocol: TCP
      port: 5432
      targetPort: 5432
      nodePort: 30000
  selector:
    app: postgres
  type: NodePort
---
apiVersion: v1
kind: Pod
metadata:
  namespace: youtube
  name: postgres-pod
  labels:
    app: postgres
    name: youtube
spec:
  hostname: postgres-pod
  subdomain: post
  securityContext:
    fsGroup: 1234
    runAsUser: 0
  volumes:
    - name: youtube-pv-storage
      persistentVolumeClaim:
        claimName: youtube-pv-claim
  restartPolicy: Always
  containers:
    - image: docker.io/guzmansalv/postgres_ts_youtube
      imagePullPolicy: Always
      name: postgres
      ports:
        - containerPort: 5432
          name: postgres
      volumeMounts:
        - mountPath: "/var/lib/postgresql/data"
          name: youtube-pv-storage
---
apiVersion: v1
kind: Pod
metadata:
  namespace: youtube
  name: dbase-pod
  labels:
    name: youtube
spec:
  restartPolicy: Always
  containers:
    - image: docker.io/guzmansalv/dbase_channels
      imagePullPolicy: Always
      name: dbase-pod
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: youtube-chan-stats-replicaset
  labels:
    name: youtube
    tier: youtube-chan-stats-replicaset
spec:
  replicas: 1
  selector:
    matchLabels:
      tier: youtube-chan-stats-replicaset
  template:
    metadata:
      namespace: youtube
      name: youtube-stats
      labels:
        name: youtube
        tier: youtube-chan-stats-replicaset
    spec:
      restartPolicy: Always
      containers:
        - image: docker.io/guzmansalv/youtube_stats
          imagePullPolicy: Always
          name: youtube-stats
          env:
            - name: API_KEY
              value: "AIzaSyAOJey2cpa5GdTXRfU73ocrmeW188soOv8|AIzaSyAMrmQxJcjbYpHNfVIeJH7JxmjD2AtZkr0|AIzaSyDb5la9mzV4npKYzZC7nEOVBri3jA-XuRU|AIzaSyDZOhJUEdWBWtrIX53slXY3x3dczTqIkSc|AIzaSyC38ZIaFBDP1mtPqpx6oGGm60WGFFMHJgQ|AIzaSyBo8rwEPhWxcb1rIAMQQmTtpYPbF4pL3kw"
            - name: DB_HOST
              value: "postgres-service.youtube.svc.cluster.local"
            - name: DB_PORT
              value: "5432"
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: youtube-cron
  labels:
    name: youtube
spec:
  schedule: "* * * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            name: youtube
        spec:
          containers:
            - name: post-cron
              image: postgres:10.5-alpine
              args:
                - /bin/sh
                - -c
                - psql --host=postgres-service.youtube.svc.cluster.local --user=postgres --port=5432 --no-password youtube -c 'delete from youtube.entities.chan_stats where views = 0 OR videos = 0'
          restartPolicy: OnFailure
---
apiVersion: v1
kind: Service
metadata:
  namespace: youtube
  name: weighted-service
  labels:
    name: youtube
spec:
  ports:
    - name: weighted
      protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30002
  selector:
    app: weighted
  type: NodePort
---
apiVersion: v1
kind: Pod
metadata:
  namespace: youtube
  name: weighted-pod
  labels:
    app: weighted
    name: youtube
spec:
  hostname: weighted-pod
  subdomain: post
  securityContext:
    fsGroup: 1234
    runAsUser: 0
  restartPolicy: Always
  containers:
    - image: docker.io/guzmansalv/youtube_weighted_service
      env:
        - name: DB_HOST
          value: "postgres-service.youtube.svc.cluster.local"
        - name: DB_PORT
          value: "5432"
      imagePullPolicy: Always
      name: weighted
      ports:
        - containerPort: 8080
          name: weighted-port
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: youtube-weighted-stats-replicaset
  labels:
    name: youtube
    tier: youtube-weighted-stats-replicaset
spec:
  replicas: 1
  selector:
    matchLabels:
      tier: youtube-weighted-stats-replicaset
  template:
    metadata:
      namespace: youtube
      name: youtube-weights
      labels:
        name: youtube
        tier: youtube-weighted-stats-replicaset
    spec:
      restartPolicy: Always
      containers:
        - image: docker.io/guzmansalv/youtube_weighted_consumer
          imagePullPolicy: Always
          name: youtube-weights
          env:
            - name: API_KEY
              value: "AIzaSyAOJey2cpa5GdTXRfU73ocrmeW188soOv8|AIzaSyAMrmQxJcjbYpHNfVIeJH7JxmjD2AtZkr0|AIzaSyDb5la9mzV4npKYzZC7nEOVBri3jA-XuRU|AIzaSyDZOhJUEdWBWtrIX53slXY3x3dczTqIkSc|AIzaSyC38ZIaFBDP1mtPqpx6oGGm60WGFFMHJgQ|AIzaSyBo8rwEPhWxcb1rIAMQQmTtpYPbF4pL3kw"
            - name: HOST
              value: "weighted-service.youtube.svc.cluster.local"
            - name: PORT
              value: "8080"
            - name: DB_HOST
              value: "postgres-service.youtube.svc.cluster.local"
            - name: DB_PORT
              value: "5432"
---
apiVersion: v1
kind: Service
metadata:
  namespace: youtube
  name: gin-service
  labels:
    name: youtube
spec:
  ports:
    - name: gin
      protocol: TCP
      port: 8000
      targetPort: 8000
      nodePort: 30003
  selector:
    app: gin
  type: NodePort
---
apiVersion: v1
kind: Pod
metadata:
  namespace: youtube
  name: gin-pod
  labels:
    app: gin
    name: youtube
spec:
  hostname: gin-pod
  subdomain: post
  securityContext:
    fsGroup: 1234
    runAsUser: 0
  restartPolicy: Always
  containers:
    - image: docker.io/guzmansalv/youtube_gin_service
      env:
        - name: DB_HOST
          value: "postgres-service.youtube.svc.cluster.local"
        - name: DB_PORT
          value: "5432"
        - name: GIN_MODE
          value: "release"
        - name: PORT
          value: "8000"
      imagePullPolicy: Always
      name: gin
      ports:
        - containerPort: 8000
          name: gin-port